//
// Definition of coefficients for different FIR downsampling and audio filters.
//
// @author Johan Hedin
// @date   2021
//
// Some of the coefficients are taken from svxlink:
// https://github.com/sm0svx/svxlink.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

#ifndef COEFFS_HPP
#define COEFFS_HPP

#include <vector>

// Notes about the filter designs.
//
// firpm is a Matlab function for creating FIR-filters.
//
//     b = firpm(n, f, a);
//
// Where:
//     n - Filter order
//     f - Vector of frequencies for the pass/stop bands expressed in the
//         range 0 - 1 where 1 corresponds to the Nyqusit frequency (fs/2)
//     a - Vector of the desired amplitude for the frequency points
//
// Returns:
//     b - A vector of length n + 1 with the filter coefficients.
//
// Example:
//   Given a sampling frequency fs of 2400kHz, create a low pass filter with a
//   passband between 0 and 10kHz and a stop band between 400kHz and 1200kHz.
//
//       fs = 2400;
//       a  = [ 1 1 0 0 ];
//       f  = [ 0 10/(fs/s) 400/(fs/2) 1200/(fs/2) ];
//
//   After filtering with this filter, the sampling frequency can be reduced
//   by 3 (to 800kHz) with resonalble aliasing in the upper frequency range.
//
// A filter can be plotted online:
// https://www.earlevel.com/main/2016/12/08/filter-frequency-response-grapher


// Coefficients for a low pass filter of order 8 for first stage downsampling
// of 8-bit samples at 2400kS/s to 1200kS/s (M = 2). Care band is between 0 and
// 5kHz and reject band is between 600kHz and 1200kHz. Attenuation is better
// than 55dB above 600Khz. Attenuation in the band 0 to 10kHz is negligible
// (< 0.07dB @ 10kHz).
//
// pkg load signal;
// fs = 2400;
// f = [ 0 5 600 fs/2 ];
// a = [ 1 1 0 0 ];
// w = [ 1 1 ];
// b = remez(8, f/(fs/2), a, w, 'bandpass', 100);
//
// % Plot with (fq axis is in kHz)
// points = 4096;
// plot((-0.5:1/points:0.5-1/points)*fs, 20*log10(abs(fftshift(fft(b, points)))), 'b-'); grid on; axis([0 fs/2 -100 5]);
static const std::vector<float> lp_ds_2400k_1200k = {
     0.0138439214677835f,
     0.0553765419256809f,
     0.1245976758676005f,
     0.1938188098095203f,
     0.2232377726886660f,
     0.1938188098095203f,
     0.1245976758676005f,
     0.0553765419256809f,
     0.0138439214677835f
};


// Coefficients for a low pass filter of order 12 for first stage downsampling
// of 8-bit samples at 1200kS/s to 400kS/s (M = 3). Care band is between 0 and
// 5kHz and reject band is between 200kHz and 600kHz. Attenuation is better
// than 51dB above 200Khz. Attenuation in the band 0 to 10kHz is negligible
// (< 0.07dB @ 10kHz).
//
// pkg load signal;
// fs = 1200;
// f = [ 0 5 200 fs/2 ];
// a = [ 1 1 0 0 ];
// w = [ 1 1 ];
// b = remez(12, f/(fs/2), a, w, 'bandpass', 26);
//
// % Plot with (fq axis is in kHz)
// points = 4096;
// plot((-0.5:1/points:0.5-1/points)*fs, 20*log10(abs(fftshift(fft(b, points)))), 'b-'); grid on; axis([0 fs/2 -100 5]);
static const std::vector<float> lp_ds_1200k_400k = {
    0.00769698395012,
    0.02310086471515,
    0.04909697759874,
    0.08279848613675,
    0.11724982591235,
    0.14324593879594,
    0.15293879092004,
    0.14324593879594,
    0.11724982591235,
    0.08279848613675,
    0.04909697759874,
    0.02310086471515,
    0.00769698395012
};


// Coefficients for a low pass filter of order 32 for second stage downsampling
// from 400kS/s to 80kS/s (M = 5). Care band is between 0 and 5kHz and reject
// band is between 40kHz and 200kHz. Attenuation is better than 56dB
// above 40Khz. Attenuation is ~0dB between 0 and 5kHz and slowly drops
// to ~0.14dB @ 8kHz.
//
// fs = 400;
// f = [ 0 5 40 fs/2 ];
// a = [ 1 1 0 0 ];
// w = [ 1 1 ];
// b = remez(32, f/(fs/2), a, w, 'bandpass');
//
// % Plot with (fq axis is in kHz)
// points = 4096;
// plot((-0.5:1/points:0.5-1/points)*fs, 20*log10(abs(fftshift(fft(b, points)))), 'b-'); grid on; axis([0 fs/2 -100 5]);
static const std::vector<float> lp_ds_400k_80k = {
    -0.001948892560501,
    -0.003258936046363,
    -0.005269553966756,
    -0.007271228241149,
    -0.008644324085976,
    -0.008595725302467,
    -0.006271869996921,
    -0.000923794690225,
     0.007923677914986,
     0.020308120122193,
     0.035730353383841,
     0.053137349738342,
     0.071019698164181,
     0.087588550627768,
     0.101034768020198,
     0.109806139008032,
     0.112852286253896,
     0.109806139008032,
     0.101034768020198,
     0.087588550627768,
     0.071019698164181,
     0.053137349738342,
     0.035730353383841,
     0.020308120122193,
     0.007923677914986,
    -0.000923794690225,
    -0.006271869996921,
    -0.008595725302467,
    -0.008644324085976,
    -0.007271228241149,
    -0.005269553966756,
    -0.003258936046363,
    -0.001948892560501
};


// Coefficients for a low pass filter of order 64 for third stage downsampling
// from 80kS/s to 16kS/s (M = 5). Care band is between 0 and 4kHz and reject
// band is between 8kHz and 40kHz. Attenuation is better than 59dB above 8Khz.
// Attenuation is ~0dB between 0 and 4kHz and drops to ~1.1dB @ 5kHz.
//
// fs = 80;
// f = [ 0 4 8 fs/2 ];
// a = [ 1 1 0 0 ];
// w = [ 1 1 ];
// b = remez(64, f/(fs/2), a, w, 'bandpass');
//
// % Plot with (fq axis is in kHz)
// points = 4096;
// plot((-0.5:1/points:0.5-1/points)*fs, 20*log10(abs(fftshift(fft(b, points)))), 'b-'); grid on; axis([0 fs/2 -100 5]);
static const std::vector<float> lp_ds_80k_16k = {
     0.000128682074732,
     0.001097405782427,
     0.001028240639255,
     0.001195267945600,
     0.000953435988375,
     0.000275899842268,
    -0.000819513373520,
    -0.002154189256205,
    -0.003399336252645,
    -0.004131099240813,
    -0.003934413354843,
    -0.002532539855699,
     0.000081077024591,
     0.003556661902451,
     0.007187507076008,
     0.010004608930370,
     0.010976128431130,
     0.009275310477245,
     0.004559922491834,
    -0.002809183674928,
    -0.011672640526868,
    -0.020154928560561,
    -0.025930900722077,
    -0.026648072897047,
    -0.020421402885783,
    -0.006304617815880,
     0.015374115059951,
     0.042898152828466,
     0.073322677609686,
     0.102890466023482,
     0.127640137197540,
     0.144087948848312,
     0.149852567045272,
     0.144087948848312,
     0.127640137197540,
     0.102890466023482,
     0.073322677609686,
     0.042898152828466,
     0.015374115059951,
    -0.006304617815880,
    -0.020421402885783,
    -0.026648072897047,
    -0.025930900722077,
    -0.020154928560561,
    -0.011672640526868,
    -0.002809183674928,
     0.004559922491834,
     0.009275310477245,
     0.010976128431130,
     0.010004608930370,
     0.007187507076008,
     0.003556661902451,
     0.000081077024591,
    -0.002532539855699,
    -0.003934413354843,
    -0.004131099240813,
    -0.003399336252645,
    -0.002154189256205,
    -0.000819513373520,
     0.000275899842268,
     0.000953435988375,
     0.001195267945600,
     0.001028240639255,
     0.001097405782427,
     0.000128682074732
};


// Lowpass filter of order 12 for first stage decimation from 2400kHz to 800kHz
// sampling frequency. Below -50dB over 400kHz.
//
// fs=2400000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 400000/(fs/2) 1];
// b=firpm(12,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_2400k_800k = {
    0.0077055710085996,
    0.0231099825172581,
    0.0491033915373070,
    0.0827979875546905,
    0.1172425796413652,
    0.1432359886614141,
    0.1529234854517300,
    0.1432359886614141,
    0.1172425796413652,
    0.0827979875546905,
    0.0491033915373070,
    0.0231099825172581,
    0.0077055710085996
};

// Lowpass filter of order 30 for second stage decimation from 800kHz to 160kHz
// sampling frequency. Below -50dB over 80kHz.
//
// fs=800000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 80000/(fs/2) 1];
// b=firpm(30,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_800k_160k = {
    -0.0029997236277028,
    -0.0043861913900128,
    -0.0065590186109396,
    -0.0082920929936370,
    -0.0087502813117280,
    -0.0070008145790774,
    -0.0021775940281952,
    0.0063104873665492,
    0.0185989520369326,
    0.0342348393119680,
    0.0521531680677441,
    0.0707596583561849,
    0.0881384331148449,
    0.1023167472191527,
    0.1115960643590441,
    0.1148277609860070,
    0.1115960643590441,
    0.1023167472191527,
    0.0881384331148449,
    0.0707596583561849,
    0.0521531680677441,
    0.0342348393119680,
    0.0185989520369326,
    0.0063104873665492,
    -0.0021775940281952,
    -0.0070008145790774,
    -0.0087502813117280,
    -0.0082920929936370,
    -0.0065590186109396,
    -0.0043861913900128,
    -0.0029997236277028
};

// Lowpass filter of order 69 for third stage decimation from 160kHz to 32kHz
// sampling frequency. Below -50dB over 16kHz.
//
// fs=160000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 16000/(fs/2) 1];
// b=firpm(69,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_160k_32k = {
    -0.0021897935693675,
    -0.0014627396578915,
    -0.0013556525689907,
    -0.0007392088237726,
    0.0003574441355289,
    0.0017246039253812,
    0.0029895055896823,
    0.0037044482910084,
    0.0034725915191305,
    0.0020872049160927,
    -0.0003267103977320,
    -0.0032962979217630,
    -0.0060432956930122,
    -0.0076661105137475,
    -0.0073849727874053,
    -0.0048159145195665,
    -0.0001754973036671,
    0.0056460528670540,
    0.0111958136705557,
    0.0147666247087154,
    0.0148298059278710,
    0.0105161290387843,
    0.0020030328211424,
    -0.0092988333174977,
    -0.0208538093298570,
    -0.0294084509371543,
    -0.0316449887034609,
    -0.0249466889575552,
    -0.0080967911710057,
    0.0182565357679944,
    0.0515079450201972,
    0.0874215550152374,
    0.1208397653529333,
    0.1466281173863568,
    0.1606670688526116,
    0.1606670688526116,
    0.1466281173863568,
    0.1208397653529333,
    0.0874215550152374,
    0.0515079450201972,
    0.0182565357679944,
    -0.0080967911710057,
    -0.0249466889575552,
    -0.0316449887034609,
    -0.0294084509371543,
    -0.0208538093298570,
    -0.0092988333174977,
    0.0020030328211424,
    0.0105161290387843,
    0.0148298059278710,
    0.0147666247087154,
    0.0111958136705557,
    0.0056460528670540,
    -0.0001754973036671,
    -0.0048159145195665,
    -0.0073849727874053,
    -0.0076661105137475,
    -0.0060432956930122,
    -0.0032962979217630,
    -0.0003267103977320,
    0.0020872049160927,
    0.0034725915191305,
    0.0037044482910084,
    0.0029895055896823,
    0.0017246039253812,
    0.0003574441355289,
    -0.0007392088237726,
    -0.0013556525689907,
    -0.0014627396578915,
    -0.0021897935693675
};

// Lowpass filter of order 30 for first stage decimation from 960kHz to 192kHz
// sampling frequency. Below -50dB over 96kHz.
//
// fs=960000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 96000/(fs/2) 1];
// b=firpm(30,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_960k_192k = {
    -0.0028713422063345,
    -0.0041769139545598,
    -0.0062171808745743,
    -0.0078031238748803,
    -0.0081233271798609,
    -0.0062743621398142,
    -0.0014205292313401,
    0.0070048711105898,
    0.0191247988093941,
    0.0344897867015570,
    0.0520570673062483,
    0.0702711557447386,
    0.0872655777710594,
    0.1011208091483218,
    0.1101849356054080,
    0.1133410547020278,
    0.1101849356054080,
    0.1011208091483218,
    0.0872655777710594,
    0.0702711557447386,
    0.0520570673062483,
    0.0344897867015570,
    0.0191247988093941,
    0.0070048711105898,
    -0.0014205292313401,
    -0.0062743621398142,
    -0.0081233271798609,
    -0.0078031238748803,
    -0.0062171808745743,
    -0.0041769139545598,
    -0.0028713422063345
};

// Lowpass filter of order 83 for second stage decimation from 192kHz to 32kHz
// sampling frequency. Below -50dB over 16kHz.
//
// fs=192000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 16000/(fs/2) 1];
// b=firpm(83,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_192k_32k = {
    -0.0018908004875791,
    -0.0014088046526025,
    -0.0010323279150753,
    -0.0011609937805184,
    -0.0002616260421106,
    0.0002282613874497,
    0.0014794737163843,
    0.0021208611663994,
    0.0030372993243376,
    0.0030011893771900,
    0.0027937120905529,
    0.0014962726557786,
    -0.0000026511430646,
    -0.0022129339849578,
    -0.0040935849190142,
    -0.0058404676355097,
    -0.0064472699433756,
    -0.0061207976418120,
    -0.0042173681807972,
    -0.0012991336407301,
    0.0026759149088455,
    0.0066958942487303,
    0.0103205964042610,
    0.0123978773268841,
    0.0125150704574251,
    0.0099739187608554,
    0.0050138881239198,
    -0.0021145533182887,
    -0.0102288336524600,
    -0.0181423359949556,
    -0.0240730300262369,
    -0.0265609078833171,
    -0.0241108160478653,
    -0.0159913513331595,
    -0.0019343883009423,
    0.0173321075924516,
    0.0404780715637686,
    0.0653782990983535,
    0.0896308725182227,
    0.1106366920921416,
    0.1261268044110260,
    0.1343340191429704,
    0.1343340191429704,
    0.1261268044110260,
    0.1106366920921416,
    0.0896308725182227,
    0.0653782990983535,
    0.0404780715637686,
    0.0173321075924516,
    -0.0019343883009423,
    -0.0159913513331595,
    -0.0241108160478653,
    -0.0265609078833171,
    -0.0240730300262369,
    -0.0181423359949556,
    -0.0102288336524600,
    -0.0021145533182887,
    0.0050138881239198,
    0.0099739187608554,
    0.0125150704574251,
    0.0123978773268841,
    0.0103205964042610,
    0.0066958942487303,
    0.0026759149088455,
    -0.0012991336407301,
    -0.0042173681807972,
    -0.0061207976418120,
    -0.0064472699433756,
    -0.0058404676355097,
    -0.0040935849190142,
    -0.0022129339849578,
    -0.0000026511430646,
    0.0014962726557786,
    0.0027937120905529,
    0.0030011893771900,
    0.0030372993243376,
    0.0021208611663994,
    0.0014794737163843,
    0.0002282613874497,
    -0.0002616260421106,
    -0.0011609937805184,
    -0.0010323279150753,
    -0.0014088046526025,
    -0.0018908004875791
};

// Lowpass filter of order 24 for second stage decimation from 192kHz to 64kHz
// sampling frequency. Below -50dB over 32kHz.
//
// fs=192000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 32000/(fs/2) 1];
// b=firpm(24,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_192k_64k = {
    0.0031540431521627,
    0.0051378158557058,
    0.0048140778412027,
    -0.0009654829873843,
    -0.0124005132227600,
    -0.0248322507830750,
    -0.0289525722662525,
    -0.0143798504318640,
    0.0245506757440186,
    0.0838527245395222,
    0.1491061174236354,
    0.2001446431453300,
    0.2194604978120209,
    0.2001446431453300,
    0.1491061174236354,
    0.0838527245395222,
    0.0245506757440186,
    -0.0143798504318640,
    -0.0289525722662525,
    -0.0248322507830750,
    -0.0124005132227600,
    -0.0009654829873843,
    0.0048140778412027,
    0.0051378158557058,
    0.0031540431521627
};

// Lowpass filter of order 28 for third stage decimation from 64kHz to 32kHz
// sampling frequency. Below -50dB over 16kHz.
//
// fs=64000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 16000/(fs/2) 1];
// b=firpm(28,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_64k_32k = {
    -0.0021501279583193,
    -0.0040430950754044,
    0.0029835459944940,
    0.0089796779827107,
    0.0024317826798201,
    -0.0152141568444195,
    -0.0158319898412721,
    0.0141893791720496,
    0.0381917625792782,
    0.0047927983228653,
    -0.0643719956719470,
    -0.0622271764136555,
    0.0857677721956512,
    0.3020049518487149,
    0.4059585000445893,
    0.3020049518487149,
    0.0857677721956512,
    -0.0622271764136555,
    -0.0643719956719470,
    0.0047927983228653,
    0.0381917625792782,
    0.0141893791720496,
    -0.0158319898412721,
    -0.0152141568444195,
    0.0024317826798201,
    0.0089796779827107,
    0.0029835459944940,
    -0.0040430950754044,
    -0.0021501279583193
};

// Lowpass filter of order 28 for fourth stage decimation from 32kHz to 16kHz
// sampling frequency. Below -50dB over 8kHz.
//
// fs=32000;
// a=[1 1 0 0];
// f=[0 5000/(fs/2) 8000/(fs/2) 1];
// b=firpm(28,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_32k_16k = {
    -0.0021501279583193,
    -0.0040430950754044,
    0.0029835459944940,
    0.0089796779827107,
    0.0024317826798201,
    -0.0152141568444195,
    -0.0158319898412721,
    0.0141893791720496,
    0.0381917625792782,
    0.0047927983228653,
    -0.0643719956719470,
    -0.0622271764136555,
    0.0857677721956512,
    0.3020049518487149,
    0.4059585000445893,
    0.3020049518487149,
    0.0857677721956512,
    -0.0622271764136555,
    -0.0643719956719470,
    0.0047927983228653,
    0.0381917625792782,
    0.0141893791720496,
    -0.0158319898412721,
    -0.0152141568444195,
    0.0024317826798201,
    0.0089796779827107,
    0.0029835459944940,
    -0.0040430950754044,
    -0.0021501279583193
};

// Lowpass filter of order 24 for second stage decimation from 192kHz to 48kHz
// sampling frequency. Below -50dB over 24kHz.
//
// fs=192000;
// a=[1 1 0 0];
// f=[0 5000/(fs/2) 24000/(fs/2) 1];
// b=firpm(24,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_192k_48k = {
    -0.0040502147520988,
    -0.0072609069449002,
    -0.0112037915378169,
    -0.0134935256903211,
    -0.0117224887444940,
    -0.0035514301475168,
    0.0124767984524734,
    0.0361987559362321,
    0.0654529075825642,
    0.0962502666343449,
    0.1235320832535051,
    0.1423342164566462,
    0.1490457432547853,
    0.1423342164566462,
    0.1235320832535051,
    0.0962502666343449,
    0.0654529075825642,
    0.0361987559362321,
    0.0124767984524734,
    -0.0035514301475168,
    -0.0117224887444940,
    -0.0134935256903211,
    -0.0112037915378169,
    -0.0072609069449002,
    -0.0040502147520988
};

// Lowpass filter of order 42 for second stage decimation from 48kHz to 16kHz
// sampling frequency. Below -50dB over 8kHz.
//
// fs=48000;
// a=[1 1 0 0];
// f=[0 5000/(fs/2) 8000/(fs/2) 1];
// b=firpm(42,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_48k_16k = {
    -0.0014095656083768,
    -0.0033446547619698,
    -0.0010368158000897,
    0.0014956412176013,
    0.0053590003107099,
    0.0058980898139176,
    0.0016320747440760,
    -0.0063721569864832,
    -0.0125298356440212,
    -0.0106470023912062,
    0.0012584104815158,
    0.0172704863658967,
    0.0254956614237699,
    0.0155605107031659,
    -0.0122481244878525,
    -0.0428992486953069,
    -0.0520035474963219,
    -0.0193237750178281,
    0.0571044072688417,
    0.1555035354575194,
    0.2383783348077489,
    0.2707390686931801,
    0.2383783348077489,
    0.1555035354575194,
    0.0571044072688417,
    -0.0193237750178281,
    -0.0520035474963219,
    -0.0428992486953069,
    -0.0122481244878525,
    0.0155605107031659,
    0.0254956614237699,
    0.0172704863658967,
    0.0012584104815158,
    -0.0106470023912062,
    -0.0125298356440212,
    -0.0063721569864832,
    0.0016320747440760,
    0.0058980898139176,
    0.0053590003107099,
    0.0014956412176013,
    -0.0010368158000897,
    -0.0033446547619698,
    -0.0014095656083768
};

// Lowpass filter of order 36 for channel filter to create a channel that start
// falling off at 20kHz bandwidth and at -50dB over 25kHz bandwidth.
// Constructed for FM.
//
// fs=32000;
// a=[1 1 0 0];
// f=[0 10000/(fs/2) 12500/(fs/2) 1];
// b=firpm(36,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_25k_channel = {
    0.0018190280178772,
    -0.0001854258281459,
    -0.0026004079079537,
    0.0050124282883767,
    -0.0033904910252379,
    -0.0033654025130130,
    0.0107364194566141,
    -0.0105940602340494,
    -0.0013915192812513,
    0.0187499316486295,
    -0.0256014795146846,
    0.0087872427705669,
    0.0270948318689248,
    -0.0552753147954016,
    0.0408445337783302,
    0.0335140955922284,
    -0.1488062351383988,
    0.2545729546201279,
    0.7025906394915605,
    0.2545729546201279,
    -0.1488062351383988,
    0.0335140955922284,
    0.0408445337783302,
    -0.0552753147954016,
    0.0270948318689248,
    0.0087872427705669,
    -0.0256014795146846,
    0.0187499316486295,
    -0.0013915192812513,
    -0.0105940602340494,
    0.0107364194566141,
    -0.0033654025130130,
    -0.0033904910252379,
    0.0050124282883767,
    -0.0026004079079537,
    -0.0001854258281459,
    0.0018190280178772
};

// Lowpass filter of order 36 for channel filter to create a channel that start
// falling off at 10kHz bandwidth and at -50dB over 12.5kHz bandwidth.
// Constructed for narrow FM and AM.
//
// fs=16000;
// a=[1 1 0 0];
// f=[0 5000/(fs/2) 6250/(fs/2) 1];
// b=firpm(36,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_12k5_channel = {
    0.0018190280178772,
    -0.0001854258281459,
    -0.0026004079079537,
    0.0050124282883767,
    -0.0033904910252379,
    -0.0033654025130130,
    0.0107364194566141,
    -0.0105940602340494,
    -0.0013915192812513,
    0.0187499316486295,
    -0.0256014795146846,
    0.0087872427705669,
    0.0270948318689248,
    -0.0552753147954016,
    0.0408445337783302,
    0.0335140955922284,
    -0.1488062351383988,
    0.2545729546201279,
    0.7025906394915605,
    0.2545729546201279,
    -0.1488062351383988,
    0.0335140955922284,
    0.0408445337783302,
    -0.0552753147954016,
    0.0270948318689248,
    0.0087872427705669,
    -0.0256014795146846,
    0.0187499316486295,
    -0.0013915192812513,
    -0.0105940602340494,
    0.0107364194566141,
    -0.0033654025130130,
    -0.0033904910252379,
    0.0050124282883767,
    -0.0026004079079537,
    -0.0001854258281459,
    0.0018190280178772
};

// Lowpass filter of order 32 for channel filter to create a channel that start
// falling off at 2.6kHz bandwidth and at -50dB over 4kHz bandwidth.
// Used for narrow band AM.
//
// fs=16000;
// a=[1 1 0 0];
// f=[0 2600/(fs/2) 4000/(fs/2) 1];
// b=firpm(32,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_nbam_channel = {
    0.0021136928439869,
    0.0020775336118770,
    -0.0033392503168020,
    -0.0056944466074802,
    0.0012986477174989,
    0.0117926503384420,
    0.0056641495955810,
    -0.0154818973323998,
    -0.0204207909678936,
    0.0113267827250988,
    0.0411160886673783,
    0.0103446260199380,
    -0.0636325829098671,
    -0.0675921412564143,
    0.0810412752797339,
    0.3042623660491556,
    0.4123175401807679,
    0.3042623660491556,
    0.0810412752797339,
    -0.0675921412564143,
    -0.0636325829098671,
    0.0103446260199380,
    0.0411160886673783,
    0.0113267827250988,
    -0.0204207909678936,
    -0.0154818973323998,
    0.0056641495955810,
    0.0117926503384420,
    0.0012986477174989,
    -0.0056944466074802,
    -0.0033392503168020,
    0.0020775336118770,
    0.0021136928439869
};

// Lowpass filter of order 57 for final audio filtering and decimation from
// 32kHz to 16kHz sampling frequency. The filter start falling off at 6500Hz.
//
// fs=32000;
// a=[1 1 0 0];
// f=[0 6500/(fs/2) 8000/(fs/2) 1];
// b=firpm(57,f,a);
//
// Design and coefficients from svxlink: https://github.com/sm0svx/svxlink
static const std::vector<float> coeff_dec_audio_32k_16k = {
    0.0002044755564088,
    0.0025162729368701,
    -0.0000373739243192,
    -0.0023823323199525,
    -0.0009174324092698,
    0.0031733626970525,
    0.0024257908780856,
    -0.0036237006402449,
    -0.0046114089386084,
    0.0033770296626382,
    0.0073898992647920,
    -0.0020191017651296,
    -0.0105102309333354,
    -0.0008742534716957,
    0.0135359367419711,
    0.0056990956333815,
    -0.0158330056196493,
    -0.0128122329209208,
    0.0165412314235204,
    0.0226120483249114,
    -0.0144736851809570,
    -0.0357965204848320,
    0.0076824090739295,
    0.0543098761642641,
    0.0082798389911014,
    -0.0854498969493825,
    -0.0509115753577537,
    0.1784581615217777,
    0.4155906562564999,
    0.4155906562564999,
    0.1784581615217777,
    -0.0509115753577537,
    -0.0854498969493825,
    0.0082798389911014,
    0.0543098761642641,
    0.0076824090739295,
    -0.0357965204848320,
    -0.0144736851809570,
    0.0226120483249114,
    0.0165412314235204,
    -0.0128122329209208,
    -0.0158330056196493,
    0.0056990956333815,
    0.0135359367419711,
    -0.0008742534716957,
    -0.0105102309333354,
    -0.0020191017651296,
    0.0073898992647920,
    0.0033770296626382,
    -0.0046114089386084,
    -0.0036237006402449,
    0.0024257908780856,
    0.0031733626970525,
    -0.0009174324092698,
    -0.0023823323199525,
    -0.0000373739243192,
    0.0025162729368701,
    0.0002044755564088
};

// Bandpass audio FIR filter designed with http://t-filter.appspot.com
//
// Sampling frequency: 16000 Hz
//
// - 0 Hz - 200 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.0462289286716 dB
//
// - 300 Hz - 3000 Hz
//   gain = 1
//   desired ripple = 2 dB
//   actual ripple = 1.5314432045390949 dB
//
// - 3200 Hz - 8000 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.0462289286716 dB
//
//   255 taps
static const std::vector<float> coeff_bp1am_channel = {
    0.004563842198874657,
    0.006577155239972158,
    0.004634688795839054,
    -0.0028484382669882106,
    -0.011752553842763762,
    -0.015531643361504371,
    -0.011223071139015429,
    -0.002631625149998262,
    0.0031328528977498894,
    0.002547700174158406,
    -0.0012706883276651874,
    -0.0025837888302353913,
    0.0005107457618963087,
    0.004453549542679998,
    0.0049408405725086015,
    0.0020918166419469017,
    -0.00005166026535607738,
    0.0012716227854979504,
    0.004245063422777128,
    0.005043144348055312,
    0.002776996210968644,
    0.00048785847545766996,
    0.0010840153566506606,
    0.0035944307320806804,
    0.004555563617415416,
    0.0026041130176433155,
    0.0002225759064904109,
    0.00040085137755753214,
    0.002672735317745194,
    0.0037664789115725117,
    0.001979557122139065,
    -0.0005483091463114038,
    -0.0006957115482289735,
    0.0014542256457168424,
    0.002704393385701921,
    0.0010244882365466387,
    -0.0016924969511028138,
    -0.0021313613041709406,
    -0.000016978484845672822,
    0.0014594113723336347,
    -0.00009655856057108726,
    -0.0030092246545083126,
    -0.0037115388746215227,
    -0.0015472448919801622,
    0.00026249646551696593,
    -0.0010959638233464294,
    -0.0041773283082732,
    -0.0051165137086062636,
    -0.0028247255895281994,
    -0.0005631648106728339,
    -0.0016292303748371402,
    -0.0048459014123064656,
    -0.006007628795437853,
    -0.0035190218661979617,
    -0.0006733785757237738,
    -0.0013318430337087982,
    -0.004659320441491099,
    -0.006079788822363655,
    -0.0033916847586056586,
    0.00011809801551673557,
    -0.0000507448417241737,
    -0.0034931452415732887,
    -0.005239372157968645,
    -0.002370407149400324,
    0.0018786277087701302,
    0.0022669301505019914,
    -0.0013578688262537338,
    -0.0036114007928873325,
    -0.0006998747044128975,
    0.0042895759051118565,
    0.005279726359729678,
    0.0013910046732500618,
    -0.0015913386485852125,
    0.0011738245315588913,
    0.006875491098275058,
    0.008498346071532948,
    0.004227386275274869,
    0.00021863841115075993,
    0.002572315506850937,
    0.00893276681946231,
    0.011235499335018896,
    0.006460088276203898,
    0.0010705083619418057,
    0.0026928955482270886,
    0.009674635861521319,
    0.01279417624358727,
    0.007458818277044526,
    0.00032732938776690296,
    0.0008589963968099661,
    0.008465318941936768,
    0.012653823183945883,
    0.006799906607898011,
    -0.0024490020032012835,
    -0.003406196572590911,
    0.004896987375901057,
    0.01059446472208919,
    0.004403864946548556,
    -0.00735405726346836,
    -0.01025735480843722,
    -0.0010658774876864635,
    0.006879043305263641,
    0.0007269193693678884,
    -0.014030296425058228,
    -0.01951699864448226,
    -0.009118883107352553,
    0.0022609381168063945,
    -0.0032031524505035346,
    -0.02173463599228955,
    -0.03089148017755867,
    -0.018790859871035438,
    -0.0019399286918852256,
    -0.005593025804377838,
    -0.029445957200938826,
    -0.0445619692008313,
    -0.02997339375387996,
    -0.0035137812802770994,
    -0.0029853447888827087,
    -0.036023165670682186,
    -0.06332111416959083,
    -0.04479164788756013,
    0.0030925202598589712,
    0.015912330313683474,
    -0.040431560151833856,
    -0.10989037559299362,
    -0.08732993317065423,
    0.06782013954572019,
    0.26684654363176225,
    0.3580161869923408,
    0.26684654363176225,
    0.06782013954572019,
    -0.08732993317065423,
    -0.10989037559299362,
    -0.040431560151833856,
    0.015912330313683474,
    0.0030925202598589712,
    -0.04479164788756013,
    -0.06332111416959083,
    -0.036023165670682186,
    -0.0029853447888827087,
    -0.0035137812802770994,
    -0.02997339375387996,
    -0.0445619692008313,
    -0.029445957200938826,
    -0.005593025804377838,
    -0.0019399286918852256,
    -0.018790859871035438,
    -0.03089148017755867,
    -0.02173463599228955,
    -0.0032031524505035346,
    0.0022609381168063945,
    -0.009118883107352553,
    -0.01951699864448226,
    -0.014030296425058228,
    0.0007269193693678884,
    0.006879043305263641,
    -0.0010658774876864635,
    -0.01025735480843722,
    -0.00735405726346836,
    0.004403864946548556,
    0.01059446472208919,
    0.004896987375901057,
    -0.003406196572590911,
    -0.0024490020032012835,
    0.006799906607898011,
    0.012653823183945883,
    0.008465318941936768,
    0.0008589963968099661,
    0.00032732938776690296,
    0.007458818277044526,
    0.01279417624358727,
    0.009674635861521319,
    0.0026928955482270886,
    0.0010705083619418057,
    0.006460088276203898,
    0.011235499335018896,
    0.00893276681946231,
    0.002572315506850937,
    0.00021863841115075993,
    0.004227386275274869,
    0.008498346071532948,
    0.006875491098275058,
    0.0011738245315588913,
    -0.0015913386485852125,
    0.0013910046732500618,
    0.005279726359729678,
    0.0042895759051118565,
    -0.0006998747044128975,
    -0.0036114007928873325,
    -0.0013578688262537338,
    0.0022669301505019914,
    0.0018786277087701302,
    -0.002370407149400324,
    -0.005239372157968645,
    -0.0034931452415732887,
    -0.0000507448417241737,
    0.00011809801551673557,
    -0.0033916847586056586,
    -0.006079788822363655,
    -0.004659320441491099,
    -0.0013318430337087982,
    -0.0006733785757237738,
    -0.0035190218661979617,
    -0.006007628795437853,
    -0.0048459014123064656,
    -0.0016292303748371402,
    -0.0005631648106728339,
    -0.0028247255895281994,
    -0.0051165137086062636,
    -0.0041773283082732,
    -0.0010959638233464294,
    0.00026249646551696593,
    -0.0015472448919801622,
    -0.0037115388746215227,
    -0.0030092246545083126,
    -0.00009655856057108726,
    0.0014594113723336347,
    -0.000016978484845672822,
    -0.0021313613041709406,
    -0.0016924969511028138,
    0.0010244882365466387,
    0.002704393385701921,
    0.0014542256457168424,
    -0.0006957115482289735,
    -0.0005483091463114038,
    0.001979557122139065,
    0.0037664789115725117,
    0.002672735317745194,
    0.00040085137755753214,
    0.0002225759064904109,
    0.0026041130176433155,
    0.004555563617415416,
    0.0035944307320806804,
    0.0010840153566506606,
    0.00048785847545766996,
    0.002776996210968644,
    0.005043144348055312,
    0.004245063422777128,
    0.0012716227854979504,
    -0.00005166026535607738,
    0.0020918166419469017,
    0.0049408405725086015,
    0.004453549542679998,
    0.0005107457618963087,
    -0.0025837888302353913,
    -0.0012706883276651874,
    0.002547700174158406,
    0.0031328528977498894,
    -0.002631625149998262,
    -0.011223071139015429,
    -0.015531643361504371,
    -0.011752553842763762,
    -0.0028484382669882106,
    0.004634688795839054,
    0.006577155239972158,
    0.004563842198874657
};


// Another bandpass audio FIR filter designed with http://t-filter.appspot.com
//
// Sampling frequency: 16000 Hz
//
// - 0 Hz - 100 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.52223587922185 dB
//
// - 250 Hz - 3000 Hz
//   gain = 1
//   desired ripple = 1 dB
//   actual ripple = 0.7080983761669941 dB
//
// - 3200 Hz - 8000 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.52223587922185 dB
//
//   189 taps
static const std::vector<float> coeff_bp2am_channel = {
  -0.0045154390920356426,
  -0.007392235744590645,
  -0.007967841982454477,
  -0.0046212613558072576,
  0.00029474468878024887,
  0.00287211193519591,
  0.0015226070294744765,
  -0.0014202658573523536,
  -0.002347715849656981,
  -0.00037895733520470777,
  0.0018918525899782991,
  0.0017373221677310262,
  -0.00036092113032877777,
  -0.001454046433729207,
  0.000043733934838983754,
  0.0023219334964579563,
  0.0025499903826072807,
  0.0006026886312163414,
  -0.0007309687745652177,
  0.0005968238601740626,
  0.003122377438277373,
  0.00371161798041297,
  0.0017181866764869663,
  -0.0000340044992178296,
  0.0010913018168782805,
  0.0039583525438041155,
  0.004997460206044115,
  0.002914884791756684,
  0.0005778846907806464,
  0.0013602765541832857,
  0.00458327392703814,
  0.00618696932605614,
  0.0040390726259503,
  0.0009537344271093405,
  0.0011796756705906254,
  0.004710934028492102,
  0.0070176241594003584,
  0.004902381743408848,
  0.0009444883856344384,
  0.0003669891158543689,
  0.004119909548740044,
  0.007282879116238261,
  0.00536188529411804,
  0.0004254272382314217,
  -0.0012544692789798972,
  0.002567222733788542,
  0.006766164961127344,
  0.005298054994391534,
  -0.0006477715978520393,
  -0.003752854836764427,
  -0.00007643760452302101,
  0.005340896533519708,
  0.004673176051981684,
  -0.0022490693835147376,
  -0.007138463299110961,
  -0.0038902440125362816,
  0.0029503832349910817,
  0.003558086670377435,
  -0.00421110360568151,
  -0.011296757708797837,
  -0.00887621002064669,
  -0.0003962890272861623,
  0.00212353606446429,
  -0.006237310639165745,
  -0.01599481884291199,
  -0.014957916341940807,
  -0.004619284853010503,
  0.0006666897528100227,
  -0.00787765442300261,
  -0.020931777828287403,
  -0.02209379248408383,
  -0.009634729624333151,
  -0.0003454375537434949,
  -0.008431497370249705,
  -0.025729368856664353,
  -0.030428117587896812,
  -0.015504012051833424,
  -0.0001842467123225016,
  -0.006717690517453609,
  -0.029997016113257065,
  -0.04080825235842376,
  -0.022833817568824005,
  0.002600866605401164,
  -0.000047927087558482265,
  -0.03335729371894511,
  -0.056813642198770525,
  -0.03458217056499297,
  0.012717117597682995,
  0.022068483206640333,
  -0.03550622382988726,
  -0.10184344817563352,
  -0.07548911864033606,
  0.07947130882706965,
  0.2748004423710325,
  0.36375242717009976,
  0.2748004423710325,
  0.07947130882706965,
  -0.07548911864033606,
  -0.10184344817563352,
  -0.03550622382988726,
  0.022068483206640333,
  0.012717117597682995,
  -0.03458217056499297,
  -0.056813642198770525,
  -0.03335729371894511,
  -0.000047927087558482265,
  0.002600866605401164,
  -0.022833817568824005,
  -0.04080825235842376,
  -0.029997016113257065,
  -0.006717690517453609,
  -0.0001842467123225016,
  -0.015504012051833424,
  -0.030428117587896812,
  -0.025729368856664353,
  -0.008431497370249705,
  -0.0003454375537434949,
  -0.009634729624333151,
  -0.02209379248408383,
  -0.020931777828287403,
  -0.00787765442300261,
  0.0006666897528100227,
  -0.004619284853010503,
  -0.014957916341940807,
  -0.01599481884291199,
  -0.006237310639165745,
  0.00212353606446429,
  -0.0003962890272861623,
  -0.00887621002064669,
  -0.011296757708797837,
  -0.00421110360568151,
  0.003558086670377435,
  0.0029503832349910817,
  -0.0038902440125362816,
  -0.007138463299110961,
  -0.0022490693835147376,
  0.004673176051981684,
  0.005340896533519708,
  -0.00007643760452302101,
  -0.003752854836764427,
  -0.0006477715978520393,
  0.005298054994391534,
  0.006766164961127344,
  0.002567222733788542,
  -0.0012544692789798972,
  0.0004254272382314217,
  0.00536188529411804,
  0.007282879116238261,
  0.004119909548740044,
  0.0003669891158543689,
  0.0009444883856344384,
  0.004902381743408848,
  0.0070176241594003584,
  0.004710934028492102,
  0.0011796756705906254,
  0.0009537344271093405,
  0.0040390726259503,
  0.00618696932605614,
  0.00458327392703814,
  0.0013602765541832857,
  0.0005778846907806464,
  0.002914884791756684,
  0.004997460206044115,
  0.0039583525438041155,
  0.0010913018168782805,
  -0.0000340044992178296,
  0.0017181866764869663,
  0.00371161798041297,
  0.003122377438277373,
  0.0005968238601740626,
  -0.0007309687745652177,
  0.0006026886312163414,
  0.0025499903826072807,
  0.0023219334964579563,
  0.000043733934838983754,
  -0.001454046433729207,
  -0.00036092113032877777,
  0.0017373221677310262,
  0.0018918525899782991,
  -0.00037895733520470777,
  -0.002347715849656981,
  -0.0014202658573523536,
  0.0015226070294744765,
  0.00287211193519591,
  0.00029474468878024887,
  -0.0046212613558072576,
  -0.007967841982454477,
  -0.007392235744590645,
  -0.0045154390920356426
};


// Yet another bandpass audio FIR filter designed with http://t-filter.appspot.com
//
// Sampling frequency: 16000 Hz
//
// - 0 Hz - 100 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.52223587922185 dB
//
// - 250 Hz - 3300 Hz
//   gain = 1
//   desired ripple = 1 dB
//   actual ripple = 0.7110387874255858 dB
//
// - 3500 Hz - 8000 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.52223587922185 dB
//
//   189 taps
static const std::vector<float> coeff_bp3am_channel = {
  -0.004366926237336961,
  -0.006987131593642828,
  -0.007647397261907269,
  -0.004910068071702901,
  -0.000641165841592133,
  0.0021303071054173863,
  0.0019227542366942081,
  -0.00013633262401911383,
  -0.001680249910180991,
  -0.0013047044577498231,
  0.0003984534693823297,
  0.0016367983557948804,
  0.0012225924586640464,
  -0.00020229273091694708,
  -0.0007928859680748916,
  0.00040213056853234203,
  0.002137957534917167,
  0.00234225621203862,
  0.0008347708168177217,
  -0.00018069465587333046,
  0.0010347576400660504,
  0.0031780220239302974,
  0.003459569439998281,
  0.0015660894308514742,
  0.00039150608212239413,
  0.0020178731603434073,
  0.004486794544345598,
  0.004380664977041834,
  0.0018938319110976187,
  0.0008625080887809762,
  0.0031983735944989874,
  0.00577538753080057,
  0.0048183710566627545,
  0.0016844624684575356,
  0.0011864298921220183,
  0.004397552812470261,
  0.006678009682457894,
  0.004430894440182127,
  0.0008070368697506138,
  0.0013127247737081476,
  0.005396244485888382,
  0.006815312242848477,
  0.002968493178809148,
  -0.0007344666402049418,
  0.001266962695379418,
  0.005964367492798087,
  0.005819979359368872,
  0.000260268939208138,
  -0.002859385447568757,
  0.0010504349236356981,
  0.005820330614311847,
  0.0033796154759592884,
  -0.0036744980005084795,
  -0.005306164263513882,
  0.0007322297294322598,
  0.004710529522865719,
  -0.0007008157546036369,
  -0.00864481530077629,
  -0.007723839529828366,
  0.0003625674142374988,
  0.0023895612223471478,
  -0.006456630678691719,
  -0.014219885096636305,
  -0.009626984607164808,
  -0.000012757220299178852,
  -0.0013764965802539942,
  -0.013789522794444982,
  -0.019780312538453297,
  -0.010413653677630174,
  -0.00033256854974014776,
  -0.006805390246936267,
  -0.022478982810090652,
  -0.02451265176216626,
  -0.009360057394233982,
  -0.0005863009946333343,
  -0.014270416893861954,
  -0.03233725244581845,
  -0.0273273167310366,
  -0.005343461104366057,
  -0.000766809391060408,
  -0.02475038839525994,
  -0.0436479613995107,
  -0.026472674998387253,
  0.004157236555368935,
  -0.0008789849712495551,
  -0.0418513552109763,
  -0.059012846802180066,
  -0.01705262497425431,
  0.029368315665318504,
  -0.0009319953102670097,
  -0.08885928991505829,
  -0.10280454302268414,
  0.050309946134097734,
  0.28513643259872073,
  0.3990532242052482,
  0.28513643259872073,
  0.050309946134097734,
  -0.10280454302268414,
  -0.08885928991505829,
  -0.0009319953102670097,
  0.029368315665318504,
  -0.01705262497425431,
  -0.059012846802180066,
  -0.0418513552109763,
  -0.0008789849712495551,
  0.004157236555368935,
  -0.026472674998387253,
  -0.0436479613995107,
  -0.02475038839525994,
  -0.000766809391060408,
  -0.005343461104366057,
  -0.0273273167310366,
  -0.03233725244581845,
  -0.014270416893861954,
  -0.0005863009946333343,
  -0.009360057394233982,
  -0.02451265176216626,
  -0.022478982810090652,
  -0.006805390246936267,
  -0.00033256854974014776,
  -0.010413653677630174,
  -0.019780312538453297,
  -0.013789522794444982,
  -0.0013764965802539942,
  -0.000012757220299178852,
  -0.009626984607164808,
  -0.014219885096636305,
  -0.006456630678691719,
  0.0023895612223471478,
  0.0003625674142374988,
  -0.007723839529828366,
  -0.00864481530077629,
  -0.0007008157546036369,
  0.004710529522865719,
  0.0007322297294322598,
  -0.005306164263513882,
  -0.0036744980005084795,
  0.0033796154759592884,
  0.005820330614311847,
  0.0010504349236356981,
  -0.002859385447568757,
  0.000260268939208138,
  0.005819979359368872,
  0.005964367492798087,
  0.001266962695379418,
  -0.0007344666402049418,
  0.002968493178809148,
  0.006815312242848477,
  0.005396244485888382,
  0.0013127247737081476,
  0.0008070368697506138,
  0.004430894440182127,
  0.006678009682457894,
  0.004397552812470261,
  0.0011864298921220183,
  0.0016844624684575356,
  0.0048183710566627545,
  0.00577538753080057,
  0.0031983735944989874,
  0.0008625080887809762,
  0.0018938319110976187,
  0.004380664977041834,
  0.004486794544345598,
  0.0020178731603434073,
  0.00039150608212239413,
  0.0015660894308514742,
  0.003459569439998281,
  0.0031780220239302974,
  0.0010347576400660504,
  -0.00018069465587333046,
  0.0008347708168177217,
  0.00234225621203862,
  0.002137957534917167,
  0.00040213056853234203,
  -0.0007928859680748916,
  -0.00020229273091694708,
  0.0012225924586640464,
  0.0016367983557948804,
  0.0003984534693823297,
  -0.0013047044577498231,
  -0.001680249910180991,
  -0.00013633262401911383,
  0.0019227542366942081,
  0.0021303071054173863,
  -0.000641165841592133,
  -0.004910068071702901,
  -0.007647397261907269,
  -0.006987131593642828,
  -0.004366926237336961
};


// Yet another bandpass audio FIR filter designed with http://t-filter.appspot.com
//
// Sampling frequency: 16000 Hz
//
// - 0 Hz - 100 Hz
//   gain = 0
//   desired attenuation = -50 dB
//   actual attenuation = -50.52223587922185 dB
//
// - 250 Hz - 3300 Hz
//   gain = 1
//   desired ripple = 1 dB
//   actual ripple = 0.7110387874255858 dB
//
// - 3500 Hz - 8000 Hz
//   gain = 0
//   desired attenuation = -70 dB
//   actual attenuation = -71.32484175370288 dB
//
//   197 taps
static const std::vector<float> coeff_bp4am_channel = {
  -0.0011444587520057204,
  -0.0033740780265230307,
  -0.0053983353127957275,
  -0.004966381369620129,
  -0.0014923333233396628,
  0.0024705515496680373,
  0.0032628468885806286,
  0.00008736623130410607,
  -0.003783833544733421,
  -0.004563687613614459,
  -0.002280247772466094,
  -0.00043478360172001025,
  -0.001306416635322331,
  -0.003037407739206245,
  -0.002402936763397384,
  0.0005627848638075027,
  0.002568658075129903,
  0.0017291277771776103,
  0.00022432065218852228,
  0.0010523730595889192,
  0.003535459772689518,
  0.004228869966587502,
  0.0020512086046564947,
  0.00006185760154974646,
  0.0010421575660990929,
  0.003302787422955437,
  0.003119363739246521,
  0.00041102678075611784,
  -0.0008804378391091812,
  0.0013937964547919817,
  0.004167672380225789,
  0.0035620952808523318,
  0.0008054678299921348,
  0.0006164365930690828,
  0.004066554782365832,
  0.00662384507678951,
  0.0047636423763863485,
  0.001473231804129787,
  0.002032687702842381,
  0.005958863175828082,
  0.007363282815331728,
  0.0037483156707015125,
  0.00015139353390917064,
  0.0018648595865537285,
  0.0062506402641284145,
  0.006316301306557684,
  0.001312415010563559,
  -0.0016480365773785268,
  0.0018952865077743683,
  0.006611205685135788,
  0.004972212583948384,
  -0.0011928028451296557,
  -0.002899550704355637,
  0.0024814418300573206,
  0.006646755508945509,
  0.002499910167139979,
  -0.004699051374347486,
  -0.004634754418793786,
  0.002340366885693956,
  0.004967196096896876,
  -0.002142695486822815,
  -0.009625393581921023,
  -0.006851439508003849,
  0.001562895970924564,
  0.0017901116383870306,
  -0.008291092395969844,
  -0.014819975292949728,
  -0.008358603504016395,
  0.0009401557648438864,
  -0.0024075459732353023,
  -0.015375000908111771,
  -0.019548303356693386,
  -0.008693222077723934,
  0.0003061108272050054,
  -0.008149889913078679,
  -0.023652390637712233,
  -0.023601072820284293,
  -0.007653057486599013,
  -0.000638562541029734,
  -0.015992642450264535,
  -0.033104144964200395,
  -0.025982023014319715,
  -0.003977758077513072,
  -0.0015240943658822927,
  -0.02652444578300965,
  -0.043746927657163245,
  -0.024731825764072835,
  0.0051154109513942515,
  -0.0021040871201693594,
  -0.04328833087506339,
  -0.05833355028500201,
  -0.015150816727735543,
  0.02972625974083161,
  -0.0025283715666035095,
  -0.08983276986506925,
  -0.10153482967650017,
  0.05199921100057444,
  0.2847632991153789,
  0.3972795398301907,
  0.2847632991153789,
  0.05199921100057444,
  -0.10153482967650017,
  -0.08983276986506925,
  -0.0025283715666035095,
  0.02972625974083161,
  -0.015150816727735543,
  -0.05833355028500201,
  -0.04328833087506339,
  -0.0021040871201693594,
  0.0051154109513942515,
  -0.024731825764072835,
  -0.043746927657163245,
  -0.02652444578300965,
  -0.0015240943658822927,
  -0.003977758077513072,
  -0.025982023014319715,
  -0.033104144964200395,
  -0.015992642450264535,
  -0.000638562541029734,
  -0.007653057486599013,
  -0.023601072820284293,
  -0.023652390637712233,
  -0.008149889913078679,
  0.0003061108272050054,
  -0.008693222077723934,
  -0.019548303356693386,
  -0.015375000908111771,
  -0.0024075459732353023,
  0.0009401557648438864,
  -0.008358603504016395,
  -0.014819975292949728,
  -0.008291092395969844,
  0.0017901116383870306,
  0.001562895970924564,
  -0.006851439508003849,
  -0.009625393581921023,
  -0.002142695486822815,
  0.004967196096896876,
  0.002340366885693956,
  -0.004634754418793786,
  -0.004699051374347486,
  0.002499910167139979,
  0.006646755508945509,
  0.0024814418300573206,
  -0.002899550704355637,
  -0.0011928028451296557,
  0.004972212583948384,
  0.006611205685135788,
  0.0018952865077743683,
  -0.0016480365773785268,
  0.001312415010563559,
  0.006316301306557684,
  0.0062506402641284145,
  0.0018648595865537285,
  0.00015139353390917064,
  0.0037483156707015125,
  0.007363282815331728,
  0.005958863175828082,
  0.002032687702842381,
  0.001473231804129787,
  0.0047636423763863485,
  0.00662384507678951,
  0.004066554782365832,
  0.0006164365930690828,
  0.0008054678299921348,
  0.0035620952808523318,
  0.004167672380225789,
  0.0013937964547919817,
  -0.0008804378391091812,
  0.00041102678075611784,
  0.003119363739246521,
  0.003302787422955437,
  0.0010421575660990929,
  0.00006185760154974646,
  0.0020512086046564947,
  0.004228869966587502,
  0.003535459772689518,
  0.0010523730595889192,
  0.00022432065218852228,
  0.0017291277771776103,
  0.002568658075129903,
  0.0005627848638075027,
  -0.002402936763397384,
  -0.003037407739206245,
  -0.001306416635322331,
  -0.00043478360172001025,
  -0.002280247772466094,
  -0.004563687613614459,
  -0.003783833544733421,
  0.00008736623130410607,
  0.0032628468885806286,
  0.0024705515496680373,
  -0.0014923333233396628,
  -0.004966381369620129,
  -0.0053983353127957275,
  -0.0033740780265230307,
  -0.0011444587520057204
};


// Reversed shape of the stage 3 downsampling filter (80kS/s to 16kS/s).
// Can be used to compensate the power spectra when creating the noise floor
// estimation
//
// Coefficients match the 512 point fft output
static const std::vector<float> passband_shape = {
     0.9978152213556555f,
     0.9978241707827833f,
     0.9978509474165201f,
     0.9978953368459393f,
     0.9979569834897580f,
     0.9980353932408256f,
     0.9981299371466075f,
     0.9982398561038253f,
     0.9983642665392120f,
     0.9985021670420514f,
     0.9986524459079820f,
     0.9988138895473172f,
     0.9989851917050145f,
     0.9991649634333647f,
     0.9993517437525407f,
     0.9995440109284085f,
     0.9997401942914748f,
     0.9999386865155984f,
     1.0001378562702345f,
     1.0003360611555090f,
     1.0005316608254478f,
     1.0007230302013304f,
     1.0009085726743505f,
     1.0010867331947630f,
     1.0012560111434377f,
     1.0014149728813437f,
     1.0015622638729755f,
     1.0016966202811715f,
     1.0018168799331733f,
     1.0019219925611671f,
     1.0020110292249356f,
     1.0020831908295926f,
     1.0021378156576912f,
     1.0021743858422123f,
     1.0021925327149706f,
     1.0021920409738259f,
     1.0021728516215729f,
     1.0021350636394502f,
     1.0020789343687686f,
     1.0020048785850131f,
     1.0019134662598919f,
     1.0018054190179617f,
     1.0016816053056055f,
     1.0015430343010878f,
     1.0013908486050727f,
     1.0012263157612300f,
     1.0010508186662690f,
     1.0008658449378565f,
     1.0006729753172681f,
     1.0004738711912700f,
     1.0002702613245591f,
     1.0000639279000694f,
     0.9998566919695734f,
     0.9996503984212507f,
     0.9994469005743083f,
     0.9992480445132902f,
     0.9990556532765124f,
     0.9988715110140930f,
     0.9986973472314178f,
     0.9985348212335969f,
     0.9983855068856957f,
     0.9982508778021538f,
     0.9981322930771221f,
     0.9980309836653082f,
     0.9979480395204934f,
     0.9978843975962137f,
     0.9978408308101048f,
     0.9978179380702933f,
     0.9978161354588123f,
     0.9978356486634327f,
     0.9978765067454709f,
     0.9979385373270426f,
     0.9980213632768234f,
     0.9981244009685788f,
     0.9982468601815592f,
     0.9983877457061012f,
     0.9985458607115009f,
     0.9987198119262550f,
     0.9989080166730553f,
     0.9991087117924080f,
     0.9993199644793288f,
     0.9995396850472289f,
     0.9997656416217907f,
     0.9999954767553072f,
     1.0002267259387034f,
     1.0004568379741905f,
     1.0006831971564467f,
     1.0009031471942926f,
     1.0011140167883747f,
     1.0013131467633762f,
     1.0014979186360742f,
     1.0016657844833858f,
     1.0018142979575919f,
     1.0019411462796461f,
     1.0020441830260725f,
     1.0021214615108565f,
     1.0021712685512989f,
     1.0021921583963513f,
     1.0021829865879175f,
     1.0021429435202471f,
     1.0020715874602555f,
     1.0019688767925854f,
     1.0018352012577776f,
     1.0016714119601000f,
     1.0014788499336591f,
     1.0012593730712145f,
     1.0010153812397737f,
     1.0007498394302778f,
     1.0004662988154125f,
     1.0001689156193603f,
     0.9998624677359580f,
     0.9995523690666253f,
     0.9992446815862430f,
     0.9989461251832806f,
     0.9986640853593309f,
     0.9984066189123145f,
     0.9981824577662709f,
     0.9980010111484323f,
     0.9978723663505528f,
     0.9978072883458552f,
     0.9978172185649976f,
     0.9979142731638544f,
     0.9981112411424027f,
     0.9984215826974612f,
     0.9988594282123976f,
     0.9994395783042198f,
     1.0001775053629558f,
     1.0010893570299773f,
     1.0021919620715092f,
     1.0035028391111898f,
     1.0050402086918928f,
     1.0068230091425863f,
     1.0088709167314278f,
     1.0112043705922802f,
     1.0138446029191581f,
     1.0168136749324055f,
     1.0201345191326467f,
     1.0238309883743861f,
     1.0279279123115146f,
     1.0324511617926815f,
     1.0374277218164942f,
     1.0428857736955863f,
     1.0488547871258578f,
     1.0553656229134785f,
     1.0624506471787465f,
     1.0701438579336371f,
     1.0784810250202088f,
     1.0874998445011885f,
     1.0972401087137045f,
     1.1077438933337964f,
     1.1190557629551046f,
     1.1312229968620346f,
     1.1442958368783478f,
     1.1583277593992498f,
     1.1733757739720554f,
     1.1895007510810156f,
     1.2067677821203922f,
     1.2252465749112131f,
     1.2450118885373198f,
     1.2661440117517730f,
     1.2887292897434441f,
     1.3128607046643961f,
     1.3386385160120577f,
     1.3661709677481453f,
     1.3955750699329055f,
     1.4269774636747556f,
     1.4605153793608037f,
     1.4963376994651327f,
     1.5346061387549088f,
     1.5754965564594487f,
     1.6192004169696377f,
     1.6659264179358388f,
     1.7159023072800710f,
     1.7693769136898827f,
     1.8266224186839131f,
     1.8879369024118668f,
     1.9536472000678216f,
     2.0241121112660645f,
     2.0997260110840767f,
     2.1809229188733608f,
     2.2681810895608057f,
     2.3620282022318908f,
     2.4630472325658044f,
     2.5718831094970200f,
     2.6892502726865177f,
     2.8159412664530401f,
     2.9528365282885600f,
     3.1009155566229918f,
     3.2612696739110674f,
     3.4351166383582399f,
     3.6238174018609737f,
     3.8288953644448980f,
     4.0520585383949985f,
     4.2952251105318320f,
     4.5605529813309298f,
     4.8504739680526088f,
     5.1677334897486649f,
     5.5154367098954173f,
     5.8971023036192642f,
     6.3167252486878915f,
     6.7788503222009435f,
     7.2886583302072632f,
     7.8520675203608077f,
     8.4758531471927370f,
     9.1677887996550442f,
     9.9368138918009699f,
     10.7932326987128011f,
     11.7489515408478322f,
     12.8177622447937232f,
     14.0156819194828035f,
     15.3613614910438567f,
     16.8765784756463866f,
     18.5868333195386590f,
     20.5220735374535224f,
     22.7175761492725030f,
     25.2150269674953229f,
     28.0638456808101076f,
     31.3228191573533934f,
     35.0621229600107895f,
     39.3658340881368360f,
     44.3350682950321584f,
     50.0919155326652046f,
     56.7844006767544016f,
     64.5927686062477449f,
     73.7374898554547684f,
     84.4895151896480314f,
     97.1834885027795821f,
     112.2348774361105086f,
     130.1623291647149756f,
     151.6170475596828169f,
     177.4216806210940263f,
     208.6221983868590826f,
     246.5576749861510848f,
     292.9549844079303966f,
     350.0585205267562969f,
     420.8096985911863044f,
     509.0980539954225037f,
     620.1166360149059074f,
     760.8714402213834092f,
     940.9217929125292130f,
     1173.4727348417825397f,
     1477.0136468231282834f,
     1877.8215625240379723f,
     2413.8637790641359970f,
     3141.0213708328788016f,
     4143.2703372938512985f,
     5549.8267687670795567f,
     7564.9949839637456535f,
     10522.1717850869627000f,
     14986.0822892565065558f,
     21957.0704003722858033f,
     33307.0520275406452129f,
     52789.1883145913670887f,
     88635.3726488486427115f,
     161246.5755303888872731f,
     330984.2129574630525894f,
     835257.5772189714480191f,
     330984.2129574630525894f,
     161246.5755303888872731f,
     88635.3726488486427115f,
     52789.1883145913670887f,
     33307.0520275406452129f,
     21957.0704003722858033f,
     14986.0822892565065558f,
     10522.1717850869627000f,
     7564.9949839637456535f,
     5549.8267687670795567f,
     4143.2703372938512985f,
     3141.0213708328788016f,
     2413.8637790641359970f,
     1877.8215625240379723f,
     1477.0136468231282834f,
     1173.4727348417825397f,
     940.9217929125292130f,
     760.8714402213834092f,
     620.1166360149059074f,
     509.0980539954225037f,
     420.8096985911863044f,
     350.0585205267562969f,
     292.9549844079303966f,
     246.5576749861510848f,
     208.6221983868590826f,
     177.4216806210940263f,
     151.6170475596828169f,
     130.1623291647149756f,
     112.2348774361105086f,
     97.1834885027795821f,
     84.4895151896480314f,
     73.7374898554547684f,
     64.5927686062477449f,
     56.7844006767544016f,
     50.0919155326652046f,
     44.3350682950321584f,
     39.3658340881368360f,
     35.0621229600107895f,
     31.3228191573533934f,
     28.0638456808101076f,
     25.2150269674953229f,
     22.7175761492725030f,
     20.5220735374535224f,
     18.5868333195386590f,
     16.8765784756463866f,
     15.3613614910438567f,
     14.0156819194828035f,
     12.8177622447937232f,
     11.7489515408478322f,
     10.7932326987128011f,
     9.9368138918009699f,
     9.1677887996550442f,
     8.4758531471927370f,
     7.8520675203608077f,
     7.2886583302072632f,
     6.7788503222009435f,
     6.3167252486878915f,
     5.8971023036192642f,
     5.5154367098954173f,
     5.1677334897486649f,
     4.8504739680526088f,
     4.5605529813309298f,
     4.2952251105318320f,
     4.0520585383949985f,
     3.8288953644448980f,
     3.6238174018609737f,
     3.4351166383582399f,
     3.2612696739110674f,
     3.1009155566229918f,
     2.9528365282885600f,
     2.8159412664530401f,
     2.6892502726865177f,
     2.5718831094970200f,
     2.4630472325658044f,
     2.3620282022318908f,
     2.2681810895608057f,
     2.1809229188733608f,
     2.0997260110840767f,
     2.0241121112660645f,
     1.9536472000678216f,
     1.8879369024118668f,
     1.8266224186839131f,
     1.7693769136898827f,
     1.7159023072800710f,
     1.6659264179358388f,
     1.6192004169696377f,
     1.5754965564594487f,
     1.5346061387549088f,
     1.4963376994651327f,
     1.4605153793608037f,
     1.4269774636747556f,
     1.3955750699329055f,
     1.3661709677481453f,
     1.3386385160120577f,
     1.3128607046643961f,
     1.2887292897434441f,
     1.2661440117517730f,
     1.2450118885373198f,
     1.2252465749112131f,
     1.2067677821203922f,
     1.1895007510810156f,
     1.1733757739720554f,
     1.1583277593992498f,
     1.1442958368783478f,
     1.1312229968620346f,
     1.1190557629551046f,
     1.1077438933337964f,
     1.0972401087137045f,
     1.0874998445011885f,
     1.0784810250202088f,
     1.0701438579336371f,
     1.0624506471787465f,
     1.0553656229134785f,
     1.0488547871258578f,
     1.0428857736955863f,
     1.0374277218164942f,
     1.0324511617926815f,
     1.0279279123115146f,
     1.0238309883743861f,
     1.0201345191326467f,
     1.0168136749324055f,
     1.0138446029191581f,
     1.0112043705922802f,
     1.0088709167314278f,
     1.0068230091425863f,
     1.0050402086918928f,
     1.0035028391111898f,
     1.0021919620715092f,
     1.0010893570299773f,
     1.0001775053629558f,
     0.9994395783042198f,
     0.9988594282123976f,
     0.9984215826974612f,
     0.9981112411424027f,
     0.9979142731638544f,
     0.9978172185649976f,
     0.9978072883458552f,
     0.9978723663505528f,
     0.9980010111484323f,
     0.9981824577662709f,
     0.9984066189123145f,
     0.9986640853593309f,
     0.9989461251832806f,
     0.9992446815862430f,
     0.9995523690666253f,
     0.9998624677359580f,
     1.0001689156193603f,
     1.0004662988154125f,
     1.0007498394302778f,
     1.0010153812397737f,
     1.0012593730712145f,
     1.0014788499336591f,
     1.0016714119601000f,
     1.0018352012577776f,
     1.0019688767925854f,
     1.0020715874602555f,
     1.0021429435202471f,
     1.0021829865879175f,
     1.0021921583963513f,
     1.0021712685512989f,
     1.0021214615108565f,
     1.0020441830260725f,
     1.0019411462796461f,
     1.0018142979575919f,
     1.0016657844833858f,
     1.0014979186360742f,
     1.0013131467633762f,
     1.0011140167883747f,
     1.0009031471942926f,
     1.0006831971564467f,
     1.0004568379741905f,
     1.0002267259387034f,
     0.9999954767553072f,
     0.9997656416217907f,
     0.9995396850472289f,
     0.9993199644793288f,
     0.9991087117924080f,
     0.9989080166730553f,
     0.9987198119262550f,
     0.9985458607115009f,
     0.9983877457061012f,
     0.9982468601815592f,
     0.9981244009685788f,
     0.9980213632768234f,
     0.9979385373270426f,
     0.9978765067454709f,
     0.9978356486634327f,
     0.9978161354588123f,
     0.9978179380702933f,
     0.9978408308101048f,
     0.9978843975962137f,
     0.9979480395204934f,
     0.9980309836653082f,
     0.9981322930771221f,
     0.9982508778021538f,
     0.9983855068856957f,
     0.9985348212335969f,
     0.9986973472314178f,
     0.9988715110140930f,
     0.9990556532765124f,
     0.9992480445132902f,
     0.9994469005743083f,
     0.9996503984212507f,
     0.9998566919695734f,
     1.0000639279000694f,
     1.0002702613245591f,
     1.0004738711912700f,
     1.0006729753172681f,
     1.0008658449378565f,
     1.0010508186662690f,
     1.0012263157612300f,
     1.0013908486050727f,
     1.0015430343010878f,
     1.0016816053056055f,
     1.0018054190179617f,
     1.0019134662598919f,
     1.0020048785850131f,
     1.0020789343687686f,
     1.0021350636394502f,
     1.0021728516215729f,
     1.0021920409738259f,
     1.0021925327149706f,
     1.0021743858422123f,
     1.0021378156576912f,
     1.0020831908295926f,
     1.0020110292249356f,
     1.0019219925611671f,
     1.0018168799331733f,
     1.0016966202811715f,
     1.0015622638729755f,
     1.0014149728813437f,
     1.0012560111434377f,
     1.0010867331947630f,
     1.0009085726743505f,
     1.0007230302013304f,
     1.0005316608254478f,
     1.0003360611555090f,
     1.0001378562702345f,
     0.9999386865155984f,
     0.9997401942914748f,
     0.9995440109284085f,
     0.9993517437525407f,
     0.9991649634333647f,
     0.9989851917050145f,
     0.9988138895473172f,
     0.9986524459079820f,
     0.9985021670420514f,
     0.9983642665392120f,
     0.9982398561038253f,
     0.9981299371466075f,
     0.9980353932408256f,
     0.9979569834897580f,
     0.9978953368459393f,
     0.9978509474165201f,
     0.9978241707827833f
};

// Ramp up constants to ramp up a 512 sammple (32ms) audio block when the
// squelsh opens. Calculated as:
//
//   y = 1 - exp(-x/100)
//
// where x goes from 0 to 511. The resulting coefficients are multiplied
// with the demodulated audio to ramp up the volume for the first audio
// block to be played after the squelsh opens.
static const std::vector<float> ramp_up = {
    0.0000000000000000f,
     0.0099501662508319f,
     0.0198013266932447f,
     0.0295544664514918f,
     0.0392105608476768f,
     0.0487705754992860f,
     0.0582354664157513f,
     0.0676061800940517f,
     0.0768836536133642f,
     0.0860688147287718f,
     0.0951625819640405f,
     0.1041658647034718f,
     0.1130795632828425f,
     0.1219045690794387f,
     0.1306417646011941f,
     0.1392920235749422f,
     0.1478562110337887f,
     0.1563351834036163f,
     0.1647297885887280f,
     0.1730408660566377f,
     0.1812692469220182f,
     0.1894157540298129f,
     0.1974812020375215f,
     0.2054663974966660f,
     0.2133721389334465f,
     0.2211992169285951f,
     0.2289484141964337f,
     0.2366205056631469f,
     0.2442162585442745f,
     0.2517364324214347f,
     0.2591817793182821f,
     0.2665530437757108f,
     0.2738509629263091f,
     0.2810762665680738f,
     0.2882296772373903f,
     0.2953119102812866f,
     0.3023236739289690f,
     0.3092656693626453f,
     0.3161385907876442f,
     0.3229431255018353f,
     0.3296799539643607f,
     0.3363497498636806f,
     0.3429531801849433f,
     0.3494909052766835f,
     0.3559635789168586f,
     0.3623718483782267f,
     0.3687163544930740f,
     0.3749977317172992f,
     0.3812166081938592f,
     0.3873736058155839f,
     0.3934693402873666f,
     0.3995044211877341f,
     0.4054794520298056f,
     0.4113950303216448f,
     0.4172517476260104f,
     0.4230501896195134f,
     0.4287909361511851f,
     0.4344745613004629f,
     0.4401016334345980f,
     0.4456727152654929f,
     0.4511883639059736f,
     0.4566491309255002f,
     0.4620555624053255f,
     0.4674081989931028f,
     0.4727075759569515f,
     0.4779542232389840f,
     0.4831486655083008f,
     0.4882914222134576f,
     0.4933830076344105f,
     0.4984239309339444f,
     0.5034146962085905f,
     0.5083558025390349f,
     0.5132477440400283f,
     0.5180910099097975f,
     0.5228860844789656f,
     0.5276334472589853f,
     0.5323335729900908f,
     0.5369869316887719f,
     0.5415939886947765f,
     0.5461552047176441f,
     0.5506710358827784f,
     0.5551419337770589f,
     0.5595683454940007f,
     0.5639507136784644f,
     0.5682894765709203f,
     0.5725850680512733f,
     0.5768379176822511f,
     0.5810484507523610f,
     0.5852170883184187f,
     0.5893442472476544f,
     0.5934303402594009f,
     0.5974757759663640f,
     0.6014809589154859f,
     0.6054462896283990f,
     0.6093721646414789f,
     0.6132589765454988f,
     0.6171071140248879f,
     0.6209169618966012f,
     0.6246889011486004f,
     0.6284233089779543f,
     0.6321205588285577f,
     0.6357810204284766f,
     0.6394050598269216f,
     0.6429930394308526f,
     0.6465453180412198f,
     0.6500622508888447f,
     0.6535441896699425f,
     0.6569914825812934f,
     0.6604044743550609f,
     0.6637835062932667f,
     0.6671289163019205f,
     0.6704410389248110f,
     0.6737202053769605f,
     0.6769667435777471f,
     0.6801809781836961f,
     0.6833632306209467f,
     0.6865138191173947f,
     0.6896330587345150f,
     0.6927212613988687f,
     0.6957787359332959f,
     0.6988057880877978f,
     0.7018027205701126f,
     0.7047698330759857f,
     0.7077074223191406f,
     0.7106157820609493f,
     0.7134952031398099f,
     0.7163459735002295f,
     0.7191683782216203f,
     0.7219626995468058f,
     0.7247292169102477f,
     0.7274682069659875f,
     0.7301799436153131f,
     0.7328646980341497f,
     0.7355227387001760f,
     0.7381543314196740f,
     0.7407597393541085f,
     0.7433392230464442f,
     0.7458930404471997f,
     0.7484214469402435f,
     0.7509246953683317f,
     0.7534030360583935f,
     0.7558567168465629f,
     0.7582859831029636f,
     0.7606910777562454f,
     0.7630722413178782f,
     0.7654297119062023f,
     0.7677637252702412f,
     0.7700745148132762f,
     0.7723623116161873f,
     0.7746273444605613f,
     0.7768698398515702f,
     0.7790900220406218f,
     0.7812881130477852f,
     0.7834643326839930f,
     0.7856188985730220f,
     0.7877520261732569f,
     0.7898639287992353f,
     0.7919548176429796f,
     0.7940249017951165f,
     0.7960743882657866f,
     0.7981034820053446f,
     0.8001123859248556f,
     0.8021013009163853f,
     0.8040704258730906f,
     0.8060199577091081f,
     0.8079500913792459f,
     0.8098610198984795f,
     0.8117529343612532f,
     0.8136260239605900f,
     0.8154804760070107f,
     0.8173164759472653f,
     0.8191342073828779f,
     0.8209338520885068f,
     0.8227155900301222f,
     0.8244795993830032f,
     0.8262260565495548f,
     0.8279551361769495f,
     0.8296670111745905f,
     0.8313618527314045f,
     0.8330398303329594f,
     0.8347011117784134f,
     0.8363458631972960f,
     0.8379742490661193f,
     0.8395864322248272f,
     0.8411825738930794f,
     0.8427628336863724f,
     0.8443273696320027f,
     0.8458763381848686f,
     0.8474098942431161f,
     0.8489281911636292f,
     0.8504313807773649f,
     0.8519196134045375f,
     0.8533930378696498f,
     0.8548518015163763f,
     0.8562960502222970f,
     0.8577259284134864f,
     0.8591415790789549f,
     0.8605431437849491f,
     0.8619307626891072f,
     0.8633045745544762f,
     0.8646647167633873f,
     0.8660113253311950f,
     0.8673445349198783f,
     0.8686644788515069f,
     0.8699712891215741f,
     0.8712650964121957f,
     0.8725460301051793f,
     0.8738142182949612f,
     0.8750697878014175f,
     0.8763128641825452f,
     0.8775435717470181f,
     0.8787620335666183f,
     0.8799683714885432f,
     0.8811627061475904f,
     0.8823451569782208f,
     0.8835158422265030f,
     0.8846748789619375f,
     0.8858223830891635f,
     0.8869584693595501f,
     0.8880832513826711f,
     0.8891968416376661f,
     0.8902993514844886f,
     0.8913908911750420f,
     0.8924715698642051f,
     0.8935414956207473f,
     0.8946007754381357f,
     0.8956495152452350f,
     0.8966878199168998f,
     0.8977157932844625f,
     0.8987335381461166f,
     0.8997411562771962f,
     0.9007387484403544f,
     0.9017264143956385f,
     0.9027042529104672f,
     0.9036723617695069f,
     0.9046308377844504f,
     0.9055797768036976f,
     0.9065192737219415f,
     0.9074494224896568f,
     0.9083703161224952f,
     0.9092820467105875f,
     0.9101847054277523f,
     0.9110783825406137f,
     0.9119631674176274f,
     0.9128391485380187f,
     0.9137064135006295f,
     0.9145650490326788f,
     0.9154151409984354f,
     0.9162567744078041f,
     0.9170900334248273f,
     0.9179150013761012f,
     0.9187317607591083f,
     0.9195403932504675f,
     0.9203409797141020f,
     0.9211336002093251f,
     0.9219183339988468f,
     0.9226952595567003f,
     0.9234644545760885f,
     0.9242259959771545f,
     0.9249799599146731f,
     0.9257264217856661f,
     0.9264654562369429f,
     0.9271971371725645f,
     0.9279215377612339f,
     0.9286387304436139f,
     0.9293487869395705f,
     0.9300517782553447f,
     0.9307477746906541f,
     0.9314368458457221f,
     0.9321190606282386f,
     0.9327944872602503f,
     0.9334631932849832f,
     0.9341252455735971f,
     0.9347807103318725f,
     0.9354296531068316f,
     0.9360721387932924f,
     0.9367082316403592f,
     0.9373379952578469f,
     0.9379614926226417f,
     0.9385787860849999f,
     0.9391899373747821f,
     0.9397950076076265f,
     0.9403940572910606f,
     0.9409871463305521f,
     0.9415743340354992f,
     0.9421556791251615f,
     0.9427312397345327f,
     0.9433010734201531f,
     0.9438652371658662f,
     0.9444237873885170f,
     0.9449767799435927f,
     0.9455242701308102f,
     0.9460663126996440f,
     0.9466029618548029f,
     0.9471342712616496f,
     0.9476602940515676f,
     0.9481810828272742f,
     0.9486966896680809f,
     0.9492071661351015f,
     0.9497125632764082f,
     0.9502129316321360f,
     0.9507083212395379f,
     0.9511987816379870f,
     0.9516843618739322f,
     0.9521651105058017f,
     0.9526410756088590f,
     0.9531123047800115f,
     0.9535788451425687f,
     0.9540407433509558f,
     0.9544980455953784f,
     0.9549507976064422f,
     0.9553990446597255f,
     0.9558428315803071f,
     0.9562822027472491f,
     0.9567172020980341f,
     0.9571478731329598f,
     0.9575742589194887f,
     0.9579964020965545f,
     0.9584143448788268f,
     0.9588281290609323f,
     0.9592377960216338f,
     0.9596433867279689f,
     0.9600449417393461f,
     0.9604425012116012f,
     0.9608361049010129f,
     0.9612257921682780f,
     0.9616116019824479f,
     0.9619935729248257f,
     0.9623717431928238f,
     0.9627461506037842f,
     0.9631168325987600f,
     0.9634838262462596f,
     0.9638471682459536f,
     0.9642068949323447f,
     0.9645630422784014f,
     0.9649156458991550f,
     0.9652647410552614f,
     0.9656103626565273f,
     0.9659525452654006f,
     0.9662913231004276f,
     0.9666267300396739f,
     0.9669587996241130f,
     0.9672875650609802f,
     0.9676130592270930f,
     0.9679353146721392f,
     0.9682543636219321f,
     0.9685702379816323f,
     0.9688829693389391f,
     0.9691925889672489f,
     0.9694991278287826f,
     0.9698026165776815f,
     0.9701030855630737f,
     0.9704005648321080f,
     0.9706950841329592f,
     0.9709866729178029f,
     0.9712753603457606f,
     0.9715611752858155f,
     0.9718441463196998f,
     0.9721243017447529f,
     0.9724016695767507f,
     0.9726762775527075f,
     0.9729481531336496f,
     0.9732173235073618f,
     0.9734838155911059f,
     0.9737476560343120f,
     0.9740088712212447f,
     0.9742674872736401f,
     0.9745235300533189f,
     0.9747770251647728f,
     0.9750279979577239f,
     0.9752764735296606f,
     0.9755224767283474f,
     0.9757660321543089f,
     0.9760071641632908f,
     0.9762458968686950f,
     0.9764822541439909f,
     0.9767162596251030f,
     0.9769479367127745f,
     0.9771773085749070f,
     0.9774043981488781f,
     0.9776292281438344f,
     0.9778518210429626f,
     0.9780721991057384f,
     0.9782903843701515f,
     0.9785063986549101f,
     0.9787202635616228f,
     0.9789320004769586f,
     0.9791416305747853f,
     0.9793491748182874f,
     0.9795546539620623f,
     0.9797580885541957f,
     0.9799594989383160f,
     0.9801589052556298f,
     0.9803563274469347f,
     0.9805517852546146f,
     0.9807452982246131f,
     0.9809368857083883f,
     0.9811265668648486f,
     0.9813143606622672f,
     0.9815002858801808f,
     0.9816843611112658f,
     0.9818666047631990f,
     0.9820470350604972f,
     0.9822256700463405f,
     0.9824025275843766f,
     0.9825776253605065f,
     0.9827509808846537f,
     0.9829226114925153f,
     0.9830925343472947f,
     0.9832607664414194f,
     0.9834273245982388f,
     0.9835922254737074f,
     0.9837554855580501f,
     0.9839171211774116f,
     0.9840771484954883f,
     0.9842355835151455f,
     0.9843924420800172f,
     0.9845477398760905f,
     0.9847014924332744f,
     0.9848537151269530f,
     0.9850044231795223f,
     0.9851536316619132f,
     0.9853013554950982f,
     0.9854476094515838f,
     0.9855924081568876f,
     0.9857357660910008f,
     0.9858776975898360f,
     0.9860182168466617f,
     0.9861573379135204f,
     0.9862950747026351f,
     0.9864314409877991f,
     0.9865664504057546f,
     0.9867001164575563f,
     0.9868324525099202f,
     0.9869634717965623f,
     0.9870931874195201f,
     0.9872216123504642f,
     0.9873487594319947f,
     0.9874746413789256f,
     0.9875992707795566f,
     0.9877226600969315f,
     0.9878448216700850f,
     0.9879657677152762f,
     0.9880855103272104f,
     0.9882040614802484f,
     0.9883214330296045f,
     0.9884376367125315f,
     0.9885526841494943f,
     0.9886665868453326f,
     0.9887793561904109f,
     0.9888910034617577f,
     0.9890015398241931f,
     0.9891109763314455f,
     0.9892193239272569f,
     0.9893265934464771f,
     0.9894327956161474f,
     0.9895379410565732f,
     0.9896420402823863f,
     0.9897451037035960f,
     0.9898471416266302f,
     0.9899481642553665f,
     0.9900481816921516f,
     0.9901472039388127f,
     0.9902452408976571f,
     0.9903423023724622f,
     0.9904383980694565f,
     0.9905335375982897f,
     0.9906277304729939f,
     0.9907209861129352f,
     0.9908133138437554f,
     0.9909047228983042f,
     0.9909952224175634f,
     0.9910848214515604f,
     0.9911735289602733f,
     0.9912613538145267f,
     0.9913483047968794f,
     0.9914343906025019f,
     0.9915196198400468f,
     0.9916040010325086f,
     0.9916875426180769f,
     0.9917702529509800f,
     0.9918521403023201f,
     0.9919332128609004f,
     0.9920134787340446f,
     0.9920929459484066f,
     0.9921716224507742f,
     0.9922495161088634f,
     0.9923266347121045f,
     0.9924029859724224f,
     0.9924785775250067f,
     0.9925534169290756f,
     0.9926275116686319f,
     0.9927008691532114f,
     0.9927734967186236f,
     0.9928454016276854f,
     0.9929165910709479f,
     0.9929870721674146f,
     0.9930568519652538f,
     0.9931259374425038f,
     0.9931943355077695f,
     0.9932620530009145f,
     0.9933290966937447f,
     0.9933954732906852f,
     0.9934611894294509f,
     0.9935262516817106f,
     0.9935906665537436f,
     0.9936544404870908f,
     0.9937175798591988f,
     0.9937800909840574f,
     0.9938419801128311f,
     0.9939032534344844f,
     0.9939639170764004f
};

// Ramp down constants to ramp down a 512 sammple (32ms) audio block when the
// squelsh closes. Calculated as:
//
//   y = exp(-x/100)
//
// where x goes from 0 to 511. The resulting coefficients are multiplied
// with the demodulated audio to ramp down the volume for the last audio
// block to be played after the squelsh closed.
static const std::vector<float> ramp_down = {
     1.0000000000000000f,
     0.9900498337491681f,
     0.9801986733067553f,
     0.9704455335485082f,
     0.9607894391523232f,
     0.9512294245007140f,
     0.9417645335842487f,
     0.9323938199059483f,
     0.9231163463866358f,
     0.9139311852712282f,
     0.9048374180359595f,
     0.8958341352965282f,
     0.8869204367171575f,
     0.8780954309205613f,
     0.8693582353988059f,
     0.8607079764250578f,
     0.8521437889662113f,
     0.8436648165963837f,
     0.8352702114112720f,
     0.8269591339433623f,
     0.8187307530779818f,
     0.8105842459701871f,
     0.8025187979624785f,
     0.7945336025033340f,
     0.7866278610665535f,
     0.7788007830714049f,
     0.7710515858035663f,
     0.7633794943368531f,
     0.7557837414557255f,
     0.7482635675785653f,
     0.7408182206817179f,
     0.7334469562242892f,
     0.7261490370736909f,
     0.7189237334319262f,
     0.7117703227626097f,
     0.7046880897187134f,
     0.6976763260710310f,
     0.6907343306373547f,
     0.6838614092123558f,
     0.6770568744981647f,
     0.6703200460356393f,
     0.6636502501363194f,
     0.6570468198150567f,
     0.6505090947233165f,
     0.6440364210831414f,
     0.6376281516217733f,
     0.6312836455069260f,
     0.6250022682827008f,
     0.6187833918061408f,
     0.6126263941844161f,
     0.6065306597126334f,
     0.6004955788122659f,
     0.5945205479701944f,
     0.5886049696783552f,
     0.5827482523739896f,
     0.5769498103804866f,
     0.5712090638488149f,
     0.5655254386995371f,
     0.5598983665654020f,
     0.5543272847345071f,
     0.5488116360940264f,
     0.5433508690744998f,
     0.5379444375946745f,
     0.5325918010068972f,
     0.5272924240430485f,
     0.5220457767610160f,
     0.5168513344916992f,
     0.5117085777865424f,
     0.5066169923655895f,
     0.5015760690660556f,
     0.4965853037914095f,
     0.4916441974609651f,
     0.4867522559599717f,
     0.4819089900902024f,
     0.4771139155210344f,
     0.4723665527410147f,
     0.4676664270099092f,
     0.4630130683112281f,
     0.4584060113052235f,
     0.4538447952823558f,
     0.4493289641172216f,
     0.4448580662229411f,
     0.4404316545059993f,
     0.4360492863215356f,
     0.4317105234290797f,
     0.4274149319487267f,
     0.4231620823177488f,
     0.4189515492476390f,
     0.4147829116815814f,
     0.4106557527523455f,
     0.4065696597405991f,
     0.4025242240336360f,
     0.3985190410845141f,
     0.3945537103716011f,
     0.3906278353585211f,
     0.3867410234545012f,
     0.3828928859751121f,
     0.3790830381033988f,
     0.3753110988513996f,
     0.3715766910220457f,
     0.3678794411714423f,
     0.3642189795715233f,
     0.3605949401730783f,
     0.3570069605691474f,
     0.3534546819587802f,
     0.3499377491111553f,
     0.3464558103300574f,
     0.3430085174187066f,
     0.3395955256449391f,
     0.3362164937067333f,
     0.3328710836980796f,
     0.3295589610751891f,
     0.3262797946230395f,
     0.3230332564222529f,
     0.3198190218163039f,
     0.3166367693790533f,
     0.3134861808826053f,
     0.3103669412654850f,
     0.3072787386011313f,
     0.3042212640667041f,
     0.3011942119122021f,
     0.2981972794298874f,
     0.2952301669240142f,
     0.2922925776808594f,
     0.2893842179390506f,
     0.2865047968601901f,
     0.2836540264997704f,
     0.2808316217783798f,
     0.2780373004531941f,
     0.2752707830897523f,
     0.2725317930340126f,
     0.2698200563846868f,
     0.2671353019658503f,
     0.2644772612998240f,
     0.2618456685803260f,
     0.2592402606458915f,
     0.2566607769535559f,
     0.2541069595528003f,
     0.2515785530597565f,
     0.2490753046316682f,
     0.2465969639416065f,
     0.2441432831534371f,
     0.2417140168970364f,
     0.2393089222437546f,
     0.2369277586821218f,
     0.2345702880937977f,
     0.2322362747297588f,
     0.2299254851867238f,
     0.2276376883838127f,
     0.2253726555394387f,
     0.2231301601484298f,
     0.2209099779593782f,
     0.2187118869522147f,
     0.2165356673160071f,
     0.2143811014269779f,
     0.2122479738267430f,
     0.2101360712007647f,
     0.2080451823570205f,
     0.2059750982048834f,
     0.2039256117342134f,
     0.2018965179946554f,
     0.1998876140751445f,
     0.1978986990836147f,
     0.1959295741269094f,
     0.1939800422908919f,
     0.1920499086207541f,
     0.1901389801015206f,
     0.1882470656387468f,
     0.1863739760394100f,
     0.1845195239929893f,
     0.1826835240527347f,
     0.1808657926171221f,
     0.1790661479114932f,
     0.1772844099698778f,
     0.1755204006169969f,
     0.1737739434504451f,
     0.1720448638230505f,
     0.1703329888254094f,
     0.1686381472685955f,
     0.1669601696670407f,
     0.1652988882215865f,
     0.1636541368027040f,
     0.1620257509338807f,
     0.1604135677751727f,
     0.1588174261069207f,
     0.1572371663136276f,
     0.1556726303679973f,
     0.1541236618151314f,
     0.1525901057568839f,
     0.1510718088363709f,
     0.1495686192226351f,
     0.1480803865954625f,
     0.1466069621303502f,
     0.1451481984836237f,
     0.1437039497777029f,
     0.1422740715865136f,
     0.1408584209210450f,
     0.1394568562150509f,
     0.1380692373108928f,
     0.1366954254455238f,
     0.1353352832366127f,
     0.1339886746688050f,
     0.1326554650801217f,
     0.1313355211484931f,
     0.1300287108784259f,
     0.1287349035878042f,
     0.1274539698948207f,
     0.1261857817050388f,
     0.1249302121985824f,
     0.1236871358174548f,
     0.1224564282529819f,
     0.1212379664333817f,
     0.1200316285114567f,
     0.1188372938524097f,
     0.1176548430217792f,
     0.1164841577734970f,
     0.1153251210380625f,
     0.1141776169108365f,
     0.1130415306404498f,
     0.1119167486173289f,
     0.1108031583623339f,
     0.1097006485155114f,
     0.1086091088249580f,
     0.1075284301357950f,
     0.1064585043792528f,
     0.1053992245618643f,
     0.1043504847547650f,
     0.1033121800831002f,
     0.1022842067155375f,
     0.1012664618538834f,
     0.1002588437228037f,
     0.0992612515596457f,
     0.0982735856043615f,
     0.0972957470895328f,
     0.0963276382304930f,
     0.0953691622155496f,
     0.0944202231963023f,
     0.0934807262780585f,
     0.0925505775103433f,
     0.0916296838775048f,
     0.0907179532894125f,
     0.0898152945722476f,
     0.0889216174593863f,
     0.0880368325823725f,
     0.0871608514619813f,
     0.0862935864993705f,
     0.0854349509673212f,
     0.0845848590015647f,
     0.0837432255921960f,
     0.0829099665751727f,
     0.0820849986238988f,
     0.0812682392408917f,
     0.0804596067495324f,
     0.0796590202858980f,
     0.0788663997906749f,
     0.0780816660011532f,
     0.0773047404432997f,
     0.0765355454239115f,
     0.0757740040228455f,
     0.0750200400853270f,
     0.0742735782143339f,
     0.0735345437630571f,
     0.0728028628274356f,
     0.0720784622387661f,
     0.0713612695563861f,
     0.0706512130604296f,
     0.0699482217446554f,
     0.0692522253093460f,
     0.0685631541542779f,
     0.0678809393717614f,
     0.0672055127397498f,
     0.0665368067150169f,
     0.0658747544264029f,
     0.0652192896681275f,
     0.0645703468931685f,
     0.0639278612067076f,
     0.0632917683596407f,
     0.0626620047421532f,
     0.0620385073773583f,
     0.0614212139150001f,
     0.0608100626252180f,
     0.0602049923923735f,
     0.0596059427089394f,
     0.0590128536694478f,
     0.0584256659645008f,
     0.0578443208748385f,
     0.0572687602654674f,
     0.0566989265798469f,
     0.0561347628341337f,
     0.0555762126114831f,
     0.0550232200564072f,
     0.0544757298691899f,
     0.0539336873003560f,
     0.0533970381451971f,
     0.0528657287383504f,
     0.0523397059484324f,
     0.0518189171727258f,
     0.0513033103319191f,
     0.0507928338648985f,
     0.0502874367235919f,
     0.0497870683678639f,
     0.0492916787604622f,
     0.0488012183620130f,
     0.0483156381260678f,
     0.0478348894941984f,
     0.0473589243911409f,
     0.0468876952199885f,
     0.0464211548574313f,
     0.0459592566490442f,
     0.0455019544046216f,
     0.0450492023935578f,
     0.0446009553402745f,
     0.0441571684196929f,
     0.0437177972527509f,
     0.0432827979019659f,
     0.0428521268670402f,
     0.0424257410805114f,
     0.0420035979034456f,
     0.0415856551211732f,
     0.0411718709390677f,
     0.0407622039783662f,
     0.0403566132720311f,
     0.0399550582606539f,
     0.0395574987883987f,
     0.0391638950989871f,
     0.0387742078317220f,
     0.0383883980175521f,
     0.0380064270751743f,
     0.0376282568071762f,
     0.0372538493962158f,
     0.0368831674012400f,
     0.0365161737537404f,
     0.0361528317540464f,
     0.0357931050676553f,
     0.0354369577215986f,
     0.0350843541008450f,
     0.0347352589447386f,
     0.0343896373434727f,
     0.0340474547345993f,
     0.0337086768995724f,
     0.0333732699603261f,
     0.0330412003758869f,
     0.0327124349390198f,
     0.0323869407729070f,
     0.0320646853278608f,
     0.0317456363780679f,
     0.0314297620183677f,
     0.0311170306610609f,
     0.0308074110327511f,
     0.0305008721712175f,
     0.0301973834223185f,
     0.0298969144369263f,
     0.0295994351678920f,
     0.0293049158670408f,
     0.0290133270821971f,
     0.0287246396542394f,
     0.0284388247141845f,
     0.0281558536803001f,
     0.0278756982552470f,
     0.0275983304232493f,
     0.0273237224472926f,
     0.0270518468663504f,
     0.0267826764926382f,
     0.0265161844088942f,
     0.0262523439656880f,
     0.0259911287787553f,
     0.0257325127263599f,
     0.0254764699466810f,
     0.0252229748352272f,
     0.0249720020422762f,
     0.0247235264703394f,
     0.0244775232716527f,
     0.0242339678456911f,
     0.0239928358367092f,
     0.0237541031313050f,
     0.0235177458560091f,
     0.0232837403748970f,
     0.0230520632872256f,
     0.0228226914250930f,
     0.0225956018511219f,
     0.0223707718561656f,
     0.0221481789570373f,
     0.0219278008942616f,
     0.0217096156298486f,
     0.0214936013450899f,
     0.0212797364383772f,
     0.0210679995230414f,
     0.0208583694252147f,
     0.0206508251817126f,
     0.0204453460379377f,
     0.0202419114458044f,
     0.0200405010616840f,
     0.0198410947443703f,
     0.0196436725530653f,
     0.0194482147453854f,
     0.0192547017753869f,
     0.0190631142916116f,
     0.0188734331351515f,
     0.0186856393377328f,
     0.0184997141198192f,
     0.0183156388887342f,
     0.0181333952368011f,
     0.0179529649395029f,
     0.0177743299536594f,
     0.0175974724156234f,
     0.0174223746394935f,
     0.0172490191153463f,
     0.0170773885074848f,
     0.0169074656527053f,
     0.0167392335585806f,
     0.0165726754017613f,
     0.0164077745262926f,
     0.0162445144419499f,
     0.0160828788225884f,
     0.0159228515045117f,
     0.0157644164848545f,
     0.0156075579199828f,
     0.0154522601239095f,
     0.0152985075667255f,
     0.0151462848730470f,
     0.0149955768204777f,
     0.0148463683380868f,
     0.0146986445049018f,
     0.0145523905484161f,
     0.0144075918431123f,
     0.0142642339089993f,
     0.0141223024101640f,
     0.0139817831533383f,
     0.0138426620864795f,
     0.0137049252973649f,
     0.0135685590122009f,
     0.0134335495942453f,
     0.0132998835424438f,
     0.0131675474900798f,
     0.0130365282034377f,
     0.0129068125804799f,
     0.0127783876495358f,
     0.0126512405680053f,
     0.0125253586210744f,
     0.0124007292204434f,
     0.0122773399030684f,
     0.0121551783299149f,
     0.0120342322847238f,
     0.0119144896727896f,
     0.0117959385197516f,
     0.0116785669703954f,
     0.0115623632874685f,
     0.0114473158505057f,
     0.0113334131546674f,
     0.0112206438095891f,
     0.0111089965382423f,
     0.0109984601758069f,
     0.0108890236685545f,
     0.0107806760727431f,
     0.0106734065535229f,
     0.0105672043838527f,
     0.0104620589434268f,
     0.0103579597176137f,
     0.0102548962964040f,
     0.0101528583733698f,
     0.0100518357446336f,
     0.0099518183078484f,
     0.0098527960611873f,
     0.0097547591023429f,
     0.0096576976275378f,
     0.0095616019305435f,
     0.0094664624017103f,
     0.0093722695270061f,
     0.0092790138870647f,
     0.0091866861562447f,
     0.0090952771016958f,
     0.0090047775824366f,
     0.0089151785484396f,
     0.0088264710397267f,
     0.0087386461854733f,
     0.0086516952031206f,
     0.0085656093974981f,
     0.0084803801599533f,
     0.0083959989674915f,
     0.0083124573819231f,
     0.0082297470490200f,
     0.0081478596976800f,
     0.0080667871390996f,
     0.0079865212659555f,
     0.0079070540515934f,
     0.0078283775492258f,
     0.0077504838911367f,
     0.0076733652878955f,
     0.0075970140275776f,
     0.0075214224749933f,
     0.0074465830709243f,
     0.0073724883313680f,
     0.0072991308467886f,
     0.0072265032813765f,
     0.0071545983723146f,
     0.0070834089290521f,
     0.0070129278325854f,
     0.0069431480347461f,
     0.0068740625574962f,
     0.0068056644922305f,
     0.0067379469990855f,
     0.0066709033062553f,
     0.0066045267093148f,
     0.0065388105705491f,
     0.0064737483182894f,
     0.0064093334462564f,
     0.0063455595129091f,
     0.0062824201408011f,
     0.0062199090159426f,
     0.0061580198871689f,
     0.0060967465655156f,
     0.0060360829235996f
};


#endif // COEFFS_HPP
